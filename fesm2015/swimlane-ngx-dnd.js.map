{"version":3,"file":"swimlane-ngx-dnd.js.map","sources":["ng://@swimlane/ngx-dnd/lib/services/drake-store.service.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-droppable.directive.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-draggable.directive.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-drag-handle.directive.ts","ng://@swimlane/ngx-dnd/lib/components/container/container.component.ts","ng://@swimlane/ngx-dnd/lib/components/item/item.component.ts","ng://@swimlane/ngx-dnd/lib/ngx-dnd.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport * as dragulaNamespace from '@swimlane/dragula';\nimport { DroppableDirective } from '../directives/ngx-droppable.directive';\nimport { DraggableDirective } from '../directives/ngx-draggable.directive';\n\n// see https://github.com/dherges/ng-packagr/issues/217\nconst dragula = dragulaNamespace;\n\n/**\n * Central service that handles all events\n *\n * @export\n */\n@Injectable({ providedIn: 'root' })\nexport class DrakeStoreService {\n  private droppableMap = new WeakMap<any, DroppableDirective>();\n  private draggableMap = new WeakMap<any, DraggableDirective>();\n  private dragulaOptions: dragulaNamespace.DragulaOptions;\n  private drake: dragulaNamespace.Drake;\n\n  constructor() {\n    this.dragulaOptions = this.createDrakeOptions();\n    this.drake = dragula([], this.dragulaOptions);\n    this.registerEvents();\n  }\n\n  register(droppable: DroppableDirective) {\n    this.droppableMap.set(droppable.container, droppable);\n    this.drake.containers.push(droppable.container);\n  }\n\n  remove(droppable: DroppableDirective) {\n    this.droppableMap.delete(droppable.container);\n    const idx = this.drake.containers.indexOf(droppable.container);\n    if (idx > -1) {\n      this.drake.containers.splice(idx, 1);\n    }\n  }\n\n  registerDraggable(draggable: DraggableDirective) {\n    this.draggableMap.set(draggable.element, draggable);\n  }\n\n  removeDraggable(draggable: DraggableDirective) {\n    this.draggableMap.delete(draggable.element);\n  }\n\n  createDrakeOptions(): dragulaNamespace.DragulaOptions {\n    const accepts = (el: any, target: any /*, source: any, sibling: any */) => {\n      if (el.contains(target)) {\n        return false;\n      }\n      const elementComponent = this.draggableMap.get(el);\n      const targetComponent = this.droppableMap.get(target);\n      if (elementComponent && targetComponent) {\n        return elementComponent.dropZones.includes(targetComponent.dropZone);\n      }\n      return true;\n    };\n\n    const copy = (_: any, source: any) => {\n      const sourceComponent = this.droppableMap.get(source);\n      if (sourceComponent) {\n        return sourceComponent.copy;\n      }\n      return false;\n    };\n\n    const moves = (el?: any, source?: any, handle?: any, sibling?: any) => {\n      const elementComponent = this.draggableMap.get(el);\n      if (elementComponent) {\n        return elementComponent.moves(source, handle, sibling);\n      }\n      return true;\n    };\n\n    return { accepts, copy, moves, revertOnSpill: true, direction: 'vertical' };\n  }\n\n  registerEvents(): void {\n    let dragElm: any;\n    let draggedItem: any;\n\n    this.drake.on('drag', (el: any, source: any) => {\n      draggedItem = undefined;\n      dragElm = el;\n\n      if (!el || !source) {\n        return;\n      }\n\n      if (this.draggableMap.has(el)) {\n        const elementComponent = this.draggableMap.get(el);\n        draggedItem = elementComponent.model;\n\n        elementComponent.drag.emit({\n          type: 'drag',\n          el,\n          source,\n          value: draggedItem\n        });\n      }\n\n      if (this.droppableMap.has(source)) {\n        const sourceComponent = this.droppableMap.get(source);\n        this.dragulaOptions.removeOnSpill = sourceComponent.removeOnSpill;\n\n        sourceComponent.drag.emit({\n          type: 'drag',\n          el,\n          source,\n          sourceComponent,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('drop', (el: any, target: any, source: any) => {\n      const targetComponent = this.droppableMap.get(target);\n\n      if (!targetComponent) {\n        // not a target, abort\n        return;\n      }\n\n      let dropElmModel = draggedItem;\n      const dropIndex = Array.prototype.indexOf.call(target.children, el);\n\n      if (dropIndex < 0) {\n        // dropIndex is bad... cancel\n        this.drake.cancel(true);\n        return;\n      }\n\n      const sourceComponent = this.droppableMap.get(source);\n\n      if (sourceComponent) {\n        const sourceModel = sourceComponent.model;\n        const targetModel = targetComponent.model;\n\n        const hasDragModel = !!(sourceModel && draggedItem);\n        const dragIndex = hasDragModel ? sourceModel.indexOf(draggedItem) : -1;\n        if (hasDragModel && dragIndex < 0) {\n          // dragIndex is bad... cancel\n          this.drake.cancel(true);\n          return;\n        }\n\n        if (targetModel) {\n          const reorder = dragIndex > -1 && sourceModel && target === source;\n          const copy = !sourceModel || dragElm !== el;\n          if (reorder) {\n            sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n          } else {\n            if (el.parentNode === target) {\n              target.removeChild(el);\n            }\n\n            if (copy) {\n              dropElmModel = JSON.parse(JSON.stringify(dropElmModel));\n            } else {\n              if (el.parentNode !== source) {\n                // add element back, let angular remove it\n                this.drake.cancel(true);\n              }\n              sourceModel.splice(dragIndex, 1);\n            }\n            targetModel.splice(dropIndex, 0, dropElmModel);\n          }\n        }\n      }\n\n      targetComponent.drop.emit({\n        type: 'drop',\n        el,\n        source,\n        value: dropElmModel,\n        dropIndex\n      });\n    });\n\n    this.drake.on('remove', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(source)) {\n        const sourceComponent = this.droppableMap.get(source);\n        const sourceModel = sourceComponent.model;\n\n        const dragIndex = draggedItem && sourceModel ? sourceModel.indexOf(draggedItem) : -1;\n\n        if (dragIndex > -1) {\n          if (el.parentNode !== source) {\n            // add element back, let angular remove it\n            source.appendChild(el);\n          }\n          sourceModel.splice(dragIndex, 1);\n        }\n\n        sourceComponent.remove.emit({\n          type: 'remove',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('cancel', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.cancel.emit({\n          type: 'cancel',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('over', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.over.emit({\n          type: 'over',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('out', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.out.emit({\n          type: 'out',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n  ElementRef,\n  EventEmitter,\n  Renderer2\n} from '@angular/core';\n\nimport { DrakeStoreService } from '../services/drake-store.service';\n\nlet i = 10000;\nfunction getNextId() {\n  return i++;\n}\n\n/**\n * Makes the container droppable and children draggable.\n *\n * @export\n */\n@Directive({ selector: '[ngxDroppable]' })\nexport class DroppableDirective implements OnInit, OnDestroy, AfterViewInit {\n  @Input() model: any;\n  @Input() copy = false;\n  @Input() removeOnSpill = false;\n  @Input() ngxDroppable: string;\n\n  @Output() drop: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() over: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() out: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() cancel: EventEmitter<any> = new EventEmitter<any>();\n\n  get container(): any {\n    return this.el.nativeElement;\n  }\n\n  @Input()\n  get dropZone(): string {\n    return this._dropZone || this.ngxDroppable || this.defaultZone;\n  }\n  set dropZone(val: string) {\n    this._dropZone = val;\n  }\n\n  defaultZone: string;\n  _dropZone: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private drakesService: DrakeStoreService) {}\n\n  ngOnInit(): void {\n    this.defaultZone = `@@DefaultDropZone-${getNextId()}@@`;\n    this.drakesService.register(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.over.subscribe(() => {\n      this.renderer.addClass(this.container, 'gu-over');\n    });\n    this.out.subscribe(() => {\n      this.renderer.removeClass(this.container, 'gu-over');\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.drakesService.remove(this);\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, Output, EventEmitter, OnDestroy, OnInit } from '@angular/core';\n\nimport { DroppableDirective } from './ngx-droppable.directive';\nimport { DrakeStoreService } from '../services/drake-store.service';\n\n/**\n * Adds properties and events to draggable elements\n *\n * @export\n */\n@Directive({ selector: '[ngxDraggable]' })\nexport class DraggableDirective implements OnInit, OnDestroy {\n  @Input() ngxDraggable: string[];\n  @Input() model: any;\n\n  @Input()\n  get dropZones(): any {\n    return this._dropZones || this.ngxDraggable || this._parentDropzones;\n  }\n  set dropZones(val: any) {\n    this._dropZones = val;\n  }\n\n  @Input('moves') _moves: boolean | ((...args: any[]) => any) = true;\n\n  /*\n  ContentChildren doesn't get children created with NgTemplateOutlet\n  See https://github.com/angular/angular/issues/14842\n  Implemented via updateElements method\n\n  @ContentChildren(DragHandleDirective, {descendants: true})\n  handlesList: QueryList<DragHandleDirective>; */\n\n  handles: any[] = [];\n\n  get hasHandle() {\n    return !!this.handles.length;\n  }\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  dragDelay: number = 200; // milliseconds\n  dragDelayed: boolean = true;\n\n  touchTimeout: any;\n\n  get element(): any {\n    return this.el.nativeElement;\n  }\n\n  _dropZones: string[];\n  _parentDropzones: string[];\n\n  constructor(\n    private el: ElementRef,\n    private drakesService: DrakeStoreService,\n    private droppableDirective: DroppableDirective\n  ) {}\n\n  // From: https://github.com/bevacqua/dragula/issues/289#issuecomment-277143172\n  @HostListener('touchmove', ['$event'])\n  onMove(e: Event) {\n    if (!this._moves || this.dragDelayed) {\n      e.stopPropagation();\n      clearTimeout(this.touchTimeout);\n    }\n  }\n\n  @HostListener('touchstart')\n  onDown() {\n    if (this._moves) {\n      this.touchTimeout = setTimeout(() => {\n        this.dragDelayed = false;\n      }, this.dragDelay);\n    }\n  }\n\n  @HostListener('touchend')\n  onUp() {\n    if (this._moves) {\n      clearTimeout(<number>this.touchTimeout);\n      this.dragDelayed = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this._parentDropzones = [this.droppableDirective.dropZone];\n    this.drakesService.registerDraggable(this);\n    this.updateElements();\n  }\n\n  ngOnDestroy(): void {\n    this.drakesService.removeDraggable(this);\n  }\n\n  updateElements(): void {\n    const nativeElement = this.el.nativeElement;\n    const handles: NodeList = nativeElement.querySelectorAll('[ngxdraghandle]');\n    this.handles = Array.from(handles).filter((h: any) => findFirstDraggableParent(h) === nativeElement);\n\n    function findFirstDraggableParent(c: any) {\n      while (c.parentNode) {\n        c = c.parentNode;\n        if (c.hasAttribute && c.hasAttribute('ngxdraggable')) {\n          return c;\n        }\n      }\n    }\n  }\n\n  canMove(source?: any, handle?: any, sibling?: any): boolean {\n    if (typeof this._moves === 'boolean') return this._moves;\n    if (typeof this._moves === 'function') return this._moves(this.model, source, handle, sibling);\n    return true;\n  }\n\n  moves(source: any, handle: any, sibling: any): boolean {\n    if (!this.canMove(source, handle, sibling)) return false;\n\n    return this.hasHandle ? this.handles.some(h => handelFor(handle, h)) : true;\n\n    function handelFor(c: any, p: any) {\n      if (c === p) return true;\n      while ((c = c.parentNode) && c !== p); // tslint:disable-line\n      return !!c;\n    }\n  }\n\n  ngDoCheck(): void {\n    this.updateElements();\n  }\n}\n","import { Directive } from '@angular/core';\n\n/**\n * Adds properties and events to drag handle elements\n *\n * @export\n */\n@Directive({ selector: '[ngxDragHandle]' })\nexport class DragHandleDirective {}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ContentChild,\n  TemplateRef,\n  ViewChild,\n  EventEmitter\n} from '@angular/core';\n\nimport { DroppableDirective } from '../../directives/ngx-droppable.directive';\n\nlet i = 0;\nfunction getNextId() {\n  return i++;\n}\n\n/**\n * Component that allows nested ngxDroppable and ngxDraggables\n *\n * @export\n */\n@Component({\n  selector: 'ngx-dnd-container',\n  template: `<div\n  ngxDroppable\n  [dropZone]=\"dropZone\"\n  [model]=\"model\"\n  [copy]=\"copy\"\n  [ngClass]=\"{ 'gu-empty': !model?.length }\"\n  [removeOnSpill]=\"removeOnSpill\"\n  class='ngx-dnd-container'>\n  <ng-container *ngIf=\"model\">\n    <ng-container *ngFor=\"let item of model\">\n      <ngx-dnd-item\n        ngxDraggable\n        [model]=\"item\"\n        [dropZone]=\"dropZone\"\n        [dropZones]=\"dropZones\"\n        [copy]=\"copy\"\n        [moves]=\"moves\"\n        [removeOnSpill]=\"removeOnSpill\"\n        [droppableItemClass]=\"droppableItemClass\"\n        [ngStyle]=\"styleString\">\n      </ngx-dnd-item>\n    </ng-container>\n  </ng-container>\n  <ng-content *ngIf=\"!model\"></ng-content>\n</div>\n`,\n  styles: [`.ngx-dnd-container{background-color:rgba(255,255,255,.2);border:2px solid red;margin:10px;padding:10px}.ngx-dnd-container.gu-empty{border:2px dotted red}.ngx-dnd-container:nth-child(odd){background-color:rgba(0,0,0,.2)}.ngx-dnd-container .ex-moved{background-color:#e74c3c}.ngx-dnd-container .ex-over{background-color:rgba(255,255,255,.3)}.ngx-dnd-container .handle{padding:0 5px;margin-right:5px;background-color:rgba(0,0,0,.4);cursor:move}.no-select{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.clearfix::after{content:\" \";display:block;height:0;clear:both}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ContainerComponent implements OnInit, AfterViewInit {\n  @Input() model: any;\n  @Input() copy = false;\n  @Input() removeOnSpill = false;\n  @Input() droppableItemClass: string | ((o: any) => any);\n  @Input() droppableItemStyle: string | ((o: any) => any);\n\n\n  @Input() dropZone = `@@DefaultDropZone-${getNextId()}@@`;\n\n  @Input()\n  get dropZones() {\n    return this._dropZones || this._defaultZones;\n  }\n  set dropZones(val) {\n    this._dropZones = val;\n  }\n\n  @Input() moves: (model: any, source: any, handle: any, sibling: any) => boolean;\n\n  // @Input() classes: any = {};\n  // @Input() dragulaOptions: any;\n\n  get styleString() {\n    const itemStyle =\n      typeof this.droppableItemStyle === 'function' ? this.droppableItemStyle(this.model) : this.droppableItemStyle;\n\n    const classes = {\n      ...itemStyle\n    };\n    // console.error(itemStyle);\n    // console.error(classes.join(' '));\n    return classes;\n  }\n\n  @Input()\n  @ContentChild(TemplateRef)\n  template: TemplateRef<any>;\n\n  @Input()\n  @ViewChild(DroppableDirective)\n  droppable: any;\n\n  @Output() drop: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() over: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() out: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() cancel: EventEmitter<any> = new EventEmitter<any>();\n\n  _dropZones: string[];\n  _defaultZones: string[];\n\n  ngOnInit() {\n    this._defaultZones = [this.dropZone];\n  }\n\n  ngAfterViewInit() {\n    this.droppable.drag.subscribe((v: any) => this.drag.emit(v));\n    this.droppable.drop.subscribe((v: any) => this.drop.emit(v));\n    this.droppable.over.subscribe((v: any) => this.over.emit(v));\n    this.droppable.out.subscribe((v: any) => this.out.emit(v));\n    this.droppable.remove.subscribe((v: any) => this.remove.emit(v));\n    this.droppable.cancel.subscribe((v: any) => this.cancel.emit(v));\n  }\n}\n","import { Component, OnInit, Input, ViewEncapsulation, HostBinding } from '@angular/core';\n\nimport { ContainerComponent } from '../container/container.component';\nimport { DraggableDirective } from '../../directives/ngx-draggable.directive';\n\n/**\n * Component that allows nested ngxDroppable and ngxDraggables\n * Should only be use inside a ngx-dnd-container\n * Outside a ngx-dnd-container use ngxDroppable\n *\n * @export\n */\n@Component({\n  selector: 'ngx-dnd-item',\n  template: `<ng-container [ngSwitch]=\"type\">\n\n  <ng-container *ngSwitchCase=\"'array'\">\n    <ngx-dnd-container\n      [model]=\"model\"\n      [template]=\"container.template\"\n      [dropZone]=\"dropZone\"\n      [dropZones]=\"dropZones\"\n      [removeOnSpill]=\"removeOnSpill\"\n      [droppableItemClass]=\"droppableItemClass\"\n      [droppableItemStyle]=\"droppableItemStyle\"\n      [copy]=\"copy\">\n    </ngx-dnd-container>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"'object'\">\n    <ng-template\n      *ngIf=\"container.template\"\n      [ngTemplateOutlet]=\"container.template\"\n      [ngTemplateOutletContext]=\"data\">\n    </ng-template>\n    <ng-container *ngIf=\"!container.template\">\n      <div\n        class=\"ngx-dnd-content\">\n        {{model.label}}\n      </div>\n      <ngx-dnd-container\n        *ngIf=\"model.children\"\n        [model]=\"model.children\"\n        [template]=\"container.template\"\n        [dropZone]=\"dropZone\"\n        [dropZones]=\"dropZones\"\n        [removeOnSpill]=\"removeOnSpill\"\n        [droppableItemClass]=\"droppableItemClass\"\n        [copy]=\"copy\">\n      </ngx-dnd-container>\n    </ng-container>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"'undefined'\">\n  </ng-container>\n\n  <ng-container *ngSwitchDefault>\n    <ng-template\n      *ngIf=\"container.template\"\n      [ngTemplateOutlet]=\"container.template\"\n      [ngTemplateOutletContext]=\"data\">\n    </ng-template>\n    <div\n      *ngIf=\"!container.template\"\n      class=\"ngx-dnd-content\">\n      {{model}}\n    </div>\n  </ng-container>\n\n</ng-container>\n\n\n\n\n\n\n\n`,\n  styles: [`.ngx-dnd-box,.ngx-dnd-item{margin:10px;padding:10px;background-color:rgba(0,0,0,.2);transition:opacity .4s ease-in-out;border:1px solid #add8e6;display:block}.ngx-dnd-box.has-handle [ngxDragHandle],.ngx-dnd-box.has-handle [ngxdraghandle],.ngx-dnd-box:not(.has-handle):not(.move-disabled),.ngx-dnd-item.has-handle [ngxDragHandle],.ngx-dnd-item.has-handle [ngxdraghandle],.ngx-dnd-item:not(.has-handle):not(.move-disabled){cursor:move;cursor:grab;cursor:-webkit-grab}.ngx-dnd-box .ngx-dnd-content,.ngx-dnd-item .ngx-dnd-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-dnd-box:hover,.ngx-dnd-item:hover{border:1px solid #00f}.ngx-dnd-box{height:40px;width:40px;line-height:20px;text-align:center;float:left}.gu-mirror{position:fixed!important;margin:0!important;z-index:9999!important;opacity:.8}.gu-hide{display:none!important}.gu-unselectable{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.gu-transit{opacity:.2}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ItemComponent implements OnInit {\n  @Input() model: any;\n\n  @Input()\n  get dropZone() {\n    return this._dropZone || this.container.dropZone;\n  }\n  set dropZone(val) {\n    this._dropZone = val;\n  }\n\n  @Input()\n  get dropZones() {\n    return this._dropZones || this.container.dropZones;\n  }\n  set dropZones(val) {\n    this._dropZones = val;\n  }\n\n  @Input()\n  get droppableItemClass() {\n    return this._droppableItemClass || this.container.droppableItemClass;\n  }\n  set droppableItemClass(val) {\n    this._droppableItemClass = val;\n  }\n\n  @Input()\n  get droppableItemStyle() {\n    return this._droppableItemStyle || this.container.droppableItemStyle;\n  }\n  set droppableItemStyle(val) {\n    this._droppableItemStyle = val;\n  }\n\n  @Input()\n  get removeOnSpill() {\n    return typeof this._removeOnSpill === 'boolean' ? this._removeOnSpill : this.container.removeOnSpill;\n  }\n  set removeOnSpill(val) {\n    this._removeOnSpill = val;\n  }\n\n  @Input()\n  get copy() {\n    return typeof this._copy === 'boolean' ? this._copy : this.container.copy;\n  }\n  set copy(val) {\n    this._copy = val;\n  }\n\n  _copy = false;\n  _dropZone: any;\n  _dropZones: any;\n  _droppableItemClass: any;\n  _droppableItemStyle: any;\n  _removeOnSpill = false;\n  data: any;\n\n  get hasHandle(): boolean {\n    return this.draggableDirective.hasHandle;\n  }\n\n  get moveDisabled(): boolean {\n    return !this.draggableDirective.canMove();\n  }\n\n  @HostBinding('class')\n  get classString() {\n    const itemClass =\n      typeof this.droppableItemClass === 'function' ? this.droppableItemClass(this.model) : this.droppableItemClass;\n\n    const classes = ['ngx-dnd-item', itemClass || ''];\n    if (this.moveDisabled) {\n      classes.push('move-disabled');\n    }\n    if (this.hasHandle) {\n      classes.push('has-handle');\n    }\n    return classes.join(' ');\n  }\n\n  get type() {\n    if (Array.isArray(this.model)) {\n      return 'array';\n    }\n    return typeof this.model;\n  }\n\n  constructor(public container: ContainerComponent, public draggableDirective: DraggableDirective) {}\n\n  ngOnInit() {\n    this.data = {\n      model: this.model,\n      type: this.type,\n      dropZone: this.dropZone,\n      template: this.container.template\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DraggableDirective } from './directives/ngx-draggable.directive';\nimport { DroppableDirective } from './directives/ngx-droppable.directive';\nimport { DragHandleDirective } from './directives/ngx-drag-handle.directive';\nimport { ContainerComponent } from './components/container/container.component';\nimport { ItemComponent } from './components/item/item.component';\nimport { DrakeStoreService } from './services/drake-store.service';\n\nconst components = [ContainerComponent, ItemComponent];\nconst directives = [DraggableDirective, DroppableDirective, DragHandleDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives],\n  providers: [DrakeStoreService]\n})\nexport class NgxDnDModule {}\n"],"names":["i","getNextId"],"mappings":";;;;;;;;AAAA;AAOA,uBAAM,OAAO,GAAG,gBAAgB,CAAC;;;;;;AAQjC,MAAa,iBAAiB;IAM5B;4BALuB,IAAI,OAAO,EAA2B;4BACtC,IAAI,OAAO,EAA2B;QAK3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;;;IAED,QAAQ,CAAC,SAA6B;QACpC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;KACjD;;;;;IAED,MAAM,CAAC,SAA6B;QAClC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC9C,uBAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACtC;KACF;;;;;IAED,iBAAiB,CAAC,SAA6B;QAC7C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KACrD;;;;;IAED,eAAe,CAAC,SAA6B;QAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KAC7C;;;;IAED,kBAAkB;QAChB,uBAAM,OAAO,GAAG,CAAC,EAAO,EAAE,MAAW;YACnC,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACvB,OAAO,KAAK,CAAC;aACd;YACD,uBAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACnD,uBAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,gBAAgB,IAAI,eAAe,EAAE;gBACvC,OAAO,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aACtE;YACD,OAAO,IAAI,CAAC;SACb,CAAC;QAEF,uBAAM,IAAI,GAAG,CAAC,CAAM,EAAE,MAAW;YAC/B,uBAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,eAAe,EAAE;gBACnB,OAAO,eAAe,CAAC,IAAI,CAAC;aAC7B;YACD,OAAO,KAAK,CAAC;SACd,CAAC;QAEF,uBAAM,KAAK,GAAG,CAAC,EAAQ,EAAE,MAAY,EAAE,MAAY,EAAE,OAAa;YAChE,uBAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACnD,IAAI,gBAAgB,EAAE;gBACpB,OAAO,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;aACxD;YACD,OAAO,IAAI,CAAC;SACb,CAAC;QAEF,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;KAC7E;;;;IAED,cAAc;QACZ,qBAAI,OAAY,CAAC;QACjB,qBAAI,WAAgB,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAO,EAAE,MAAW;YACzC,WAAW,GAAG,SAAS,CAAC;YACxB,OAAO,GAAG,EAAE,CAAC;YAEb,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE;gBAClB,OAAO;aACR;YAED,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBAC7B,uBAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACnD,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC;gBAErC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;oBACzB,IAAI,EAAE,MAAM;oBACZ,EAAE;oBACF,MAAM;oBACN,KAAK,EAAE,WAAW;iBACnB,CAAC,CAAC;aACJ;YAED,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACjC,uBAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACtD,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,eAAe,CAAC,aAAa,CAAC;gBAElE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;oBACxB,IAAI,EAAE,MAAM;oBACZ,EAAE;oBACF,MAAM;oBACN,eAAe;oBACf,KAAK,EAAE,WAAW;iBACnB,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAO,EAAE,MAAW,EAAE,MAAW;YACtD,uBAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEtD,IAAI,CAAC,eAAe,EAAE;;gBAEpB,OAAO;aACR;YAED,qBAAI,YAAY,GAAG,WAAW,CAAC;YAC/B,uBAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAEpE,IAAI,SAAS,GAAG,CAAC,EAAE;;gBAEjB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACxB,OAAO;aACR;YAED,uBAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEtD,IAAI,eAAe,EAAE;gBACnB,uBAAM,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC;gBAC1C,uBAAM,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC;gBAE1C,uBAAM,YAAY,GAAG,CAAC,EAAE,WAAW,IAAI,WAAW,CAAC,CAAC;gBACpD,uBAAM,SAAS,GAAG,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvE,IAAI,YAAY,IAAI,SAAS,GAAG,CAAC,EAAE;;oBAEjC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACxB,OAAO;iBACR;gBAED,IAAI,WAAW,EAAE;oBACf,uBAAM,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,WAAW,IAAI,MAAM,KAAK,MAAM,CAAC;oBACnE,uBAAM,IAAI,GAAG,CAAC,WAAW,IAAI,OAAO,KAAK,EAAE,CAAC;oBAC5C,IAAI,OAAO,EAAE;wBACX,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACvE;yBAAM;wBACL,IAAI,EAAE,CAAC,UAAU,KAAK,MAAM,EAAE;4BAC5B,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;yBACxB;wBAED,IAAI,IAAI,EAAE;4BACR,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;yBACzD;6BAAM;4BACL,IAAI,EAAE,CAAC,UAAU,KAAK,MAAM,EAAE;;gCAE5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;6BACzB;4BACD,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;yBAClC;wBACD,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;qBAChD;iBACF;aACF;YAED,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;gBACxB,IAAI,EAAE,MAAM;gBACZ,EAAE;gBACF,MAAM;gBACN,KAAK,EAAE,YAAY;gBACnB,SAAS;aACV,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAO,EAAE,SAAc,EAAE,MAAW;YAC3D,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACjC,uBAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACtD,uBAAM,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC;gBAE1C,uBAAM,SAAS,GAAG,WAAW,IAAI,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAErF,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE;oBAClB,IAAI,EAAE,CAAC,UAAU,KAAK,MAAM,EAAE;;wBAE5B,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;qBACxB;oBACD,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;iBAClC;gBAED,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC1B,IAAI,EAAE,QAAQ;oBACd,EAAE;oBACF,SAAS;oBACT,MAAM;oBACN,KAAK,EAAE,WAAW;iBACnB,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAO,EAAE,SAAc,EAAE,MAAW;YAC3D,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACpC,uBAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC5D,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC7B,IAAI,EAAE,QAAQ;oBACd,EAAE;oBACF,SAAS;oBACT,MAAM;oBACN,KAAK,EAAE,WAAW;iBACnB,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAO,EAAE,SAAc,EAAE,MAAW;YACzD,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACpC,uBAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC5D,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC3B,IAAI,EAAE,MAAM;oBACZ,EAAE;oBACF,SAAS;oBACT,MAAM;oBACN,KAAK,EAAE,WAAW;iBACnB,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAO,EAAE,SAAc,EAAE,MAAW;YACxD,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACpC,uBAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC5D,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC;oBAC1B,IAAI,EAAE,KAAK;oBACX,EAAE;oBACF,SAAS;oBACT,MAAM;oBACN,KAAK,EAAE,WAAW;iBACnB,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;KACJ;;;YAvOF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;ACdlC,AAcA,qBAAI,CAAC,GAAG,KAAK,CAAC;;;;AACd,SAAS,SAAS;IAChB,OAAO,CAAC,EAAE,CAAC;CACZ;;;;;;AAQD,MAAa,kBAAkB;;;;;;IAiC7B,YAAoB,EAAc,EAAU,QAAmB,EAAU,aAAgC;QAArF,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,kBAAa,GAAb,aAAa,CAAmB;oBA/BzF,KAAK;6BACI,KAAK;oBAGM,IAAI,YAAY,EAAO;oBAEvB,IAAI,YAAY,EAAO;oBAEvB,IAAI,YAAY,EAAO;mBAExB,IAAI,YAAY,EAAO;sBAEpB,IAAI,YAAY,EAAO;sBAEvB,IAAI,YAAY,EAAO;KAiBgD;;;;IAf7G,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;KAC9B;;;;QAGG,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC;;;;;;IAEjE,IAAI,QAAQ,CAAC,GAAW;QACtB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;KACtB;;;;IAOD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,qBAAqB,SAAS,EAAE,IAAI,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACnC;;;;IAED,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SACtD,CAAC,CAAC;KACJ;;;;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACjC;;;YApDF,SAAS,SAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE;;;;YAjBvC,UAAU;YAEV,SAAS;YAGF,iBAAiB;;;sBAcvB,KAAK;qBACL,KAAK;8BACL,KAAK;6BACL,KAAK;qBAEL,MAAM;qBAEN,MAAM;qBAEN,MAAM;oBAEN,MAAM;uBAEN,MAAM;uBAEN,MAAM;yBAMN,KAAK;;;;;;;AC/CR;;;;;AAWA,MAAa,kBAAkB;;;;;;IA0C7B,YACU,IACA,eACA;QAFA,OAAE,GAAF,EAAE;QACF,kBAAa,GAAb,aAAa;QACb,uBAAkB,GAAlB,kBAAkB;sBAjCkC,IAAI;;;;;;;;QAUlE,eAAiB,EAAE,CAAC;oBAMgB,IAAI,YAAY,EAAO;QAE3D,iBAAoB,GAAG,CAAC;QACxB,mBAAuB,IAAI,CAAC;KAexB;;;;QAzCA,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC;;;;;;IAEvE,IAAI,SAAS,CAAC,GAAQ;QACpB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;KACvB;;;;IAcD,IAAI,SAAS;QACX,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC9B;;;;IASD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;KAC9B;;;;;IAaD,MAAM,CAAC,CAAQ;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;YACpC,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACjC;;;;;IAIH,MAAM;QACJ,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;gBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACpB;;;;;IAIH,IAAI;QACF,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,YAAY,mBAAS,IAAI,CAAC,YAAY,EAAC,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;;;;;IAGH,QAAQ;QACN,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;;;;IAED,MAAM;QACJ,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KAC1C;;;;IAED,cAAc;QACZ,uBAAM,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QAC5C,uBAAM,OAAO,GAAa,aAAa,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;QAC5E,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAM,KAAK,wBAAwB,CAAC,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC;;;;;QAErG,SAAS,wBAAwB,CAAC,CAAM;YACtC,OAAO,CAAC,CAAC,UAAU,EAAE;gBACnB,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC;gBACjB,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE;oBACpD,OAAO,CAAC,CAAC;iBACV;aACF;SACF;KACF;;;;;;;IAED,OAAO,CAAC,MAAY,EAAE,MAAY,EAAE,OAAa;QAC/C,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC;QACzD,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,UAAU;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC/F,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,KAAK,CAAC,MAAW,EAAE,MAAW,EAAE,OAAY;QAC1C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;YAAE,OAAO,KAAK,CAAC;QAEzD,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;;;;;;QAE5E,SAAS,SAAS,CAAC,CAAM,EAAE,CAAM;YAC/B,IAAI,CAAC,KAAK,CAAC;gBAAE,OAAO,IAAI,CAAC;YACzB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,KAAK,CAAC,KAAK,CAAC;gBAAC,CAAC;YACtC,OAAO,CAAC,CAAC,CAAC,CAAC;SACZ;KACF;;;;IAED,SAAS;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;YA5HF,SAAS,SAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE;;;;YAVrB,UAAU;YAGrB,iBAAiB;YADjB,kBAAkB;;;6BAUxB,KAAK;sBACL,KAAK;0BAEL,KAAK;uBAQL,KAAK,SAAC,OAAO;qBAgBb,MAAM;uBAqBN,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;uBAQpC,YAAY,SAAC,YAAY;qBASzB,YAAY,SAAC,UAAU;;;;;;;AC7E1B;;;;;AAQA,MAAa,mBAAmB;;;YAD/B,SAAS,SAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;;;;;;;ACP1C,AAeA,qBAAIA,GAAC,GAAG,CAAC,CAAC;;;;AACV,SAASC,WAAS;IAChB,OAAOD,GAAC,EAAE,CAAC;CACZ;;;;;;AAsCD,MAAa,kBAAkB;;oBAEb,KAAK;6BACI,KAAK;wBAKV,qBAAqBC,WAAS,EAAE,IAAI;oBAmCpB,IAAI,YAAY,EAAO;oBAEvB,IAAI,YAAY,EAAO;oBAEvB,IAAI,YAAY,EAAO;mBAExB,IAAI,YAAY,EAAO;sBAEpB,IAAI,YAAY,EAAO;sBAEvB,IAAI,YAAY,EAAO;;;;;QA1CzD,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC;;;;;;IAE/C,IAAI,SAAS,CAAC,GAAG;QACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;KACvB;;;;IAOD,IAAI,WAAW;QACb,uBAAM,SAAS,GACb,OAAO,IAAI,CAAC,kBAAkB,KAAK,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEhH,uBAAM,OAAO,qBACR,SAAS,CACb,CAAC;;;QAGF,OAAO,OAAO,CAAC;KAChB;;;;IAyBD,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtC;;;;IAED,eAAe;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAClE;;;YApGF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;CAyBX;gBACC,MAAM,EAAE,CAAC,qnBAAqnB,CAAC;gBAC/nB,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC;;;;sBAEE,KAAK;qBACL,KAAK;8BACL,KAAK;mCACL,KAAK;mCACL,KAAK;yBAGL,KAAK;0BAEL,KAAK;sBAQL,KAAK;yBAiBL,KAAK,YACL,YAAY,SAAC,WAAW;0BAGxB,KAAK,YACL,SAAS,SAAC,kBAAkB;qBAG5B,MAAM;qBAEN,MAAM;qBAEN,MAAM;oBAEN,MAAM;uBAEN,MAAM;uBAEN,MAAM;;;;;;;AC7GT;;;;;;;AAiFA,MAAa,aAAa;;;;;IAyFxB,YAAmB,SAA6B,EAAS,kBAAsC;QAA5E,cAAS,GAAT,SAAS,CAAoB;QAAS,uBAAkB,GAAlB,kBAAkB,CAAoB;QAtC/F,aAAQ,KAAK,CAAC;QAKd,sBAAiB,KAAK,CAAC;KAiC4E;;;;QArF/F,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;;;;;;IAEnD,IAAI,QAAQ,CAAC,GAAG;QACd,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;KACtB;;;;QAGG,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;;;;;;IAErD,IAAI,SAAS,CAAC,GAAG;QACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;KACvB;;;;QAGG,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;;;;;;IAEvE,IAAI,kBAAkB,CAAC,GAAG;QACxB,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;KAChC;;;;QAGG,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;;;;;;IAEvE,IAAI,kBAAkB,CAAC,GAAG;QACxB,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;KAChC;;;;QAGG,aAAa;QACf,OAAO,OAAO,IAAI,CAAC,cAAc,KAAK,SAAS,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;;;;;;IAEvG,IAAI,aAAa,CAAC,GAAG;QACnB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;KAC3B;;;;QAGG,IAAI;QACN,OAAO,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;;;;;;IAE5E,IAAI,IAAI,CAAC,GAAG;QACV,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;KAClB;;;;IAUD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC;KAC1C;;;;IAED,IAAI,YAAY;QACd,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;KAC3C;;;;QAGG,WAAW;QACb,uBAAM,SAAS,GACb,OAAO,IAAI,CAAC,kBAAkB,KAAK,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEhH,uBAAM,OAAO,GAAG,CAAC,cAAc,EAAE,SAAS,IAAI,EAAE,CAAC,CAAC;QAClD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC5B;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;;;IAG3B,IAAI,IAAI;QACN,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC7B,OAAO,OAAO,CAAC;SAChB;QACD,OAAO,OAAO,IAAI,CAAC,KAAK,CAAC;KAC1B;;;;IAID,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG;YACV,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;SAClC,CAAC;KACH;;;YAvKF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+DX;gBACC,MAAM,EAAE,CAAC,khCAAkhC,CAAC;gBAC5hC,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC;;;;YA9EQ,kBAAkB;YAClB,kBAAkB;;;sBA+ExB,KAAK;yBAEL,KAAK;0BAQL,KAAK;mCAQL,KAAK;mCAQL,KAAK;8BAQL,KAAK;qBAQL,KAAK;4BAwBL,WAAW,SAAC,OAAO;;;;;;;ACpJtB,AAUA,uBAAM,UAAU,GAAG,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;AACvD,uBAAM,UAAU,GAAG,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;AAQjF,MAAa,YAAY;;;YANxB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,GAAG,UAAU,EAAE,GAAG,UAAU,CAAC;gBAC5C,OAAO,EAAE,CAAC,GAAG,UAAU,EAAE,GAAG,UAAU,CAAC;gBACvC,SAAS,EAAE,CAAC,iBAAiB,CAAC;aAC/B;;;;;;;;;;;;;;;"}
