{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@swimlane/ngx-dnd/lib/services/drake-store.service.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-droppable.directive.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-draggable.directive.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-drag-handle.directive.ts","ng://@swimlane/ngx-dnd/lib/components/container/container.component.ts","ng://@swimlane/ngx-dnd/lib/components/item/item.component.ts","ng://@swimlane/ngx-dnd/lib/ngx-dnd.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","dragula","dragulaNamespace","DrakeStoreService","this","droppableMap","WeakMap","draggableMap","dragulaOptions","createDrakeOptions","drake","registerEvents","prototype","register","droppable","set","container","containers","remove","delete","idx","indexOf","splice","registerDraggable","draggable","element","removeDraggable","_this","accepts","el","target","contains","elementComponent","get","targetComponent","dropZones","includes","dropZone","copy","_","source","sourceComponent","moves","handle","sibling","revertOnSpill","direction","dragElm","draggedItem","on","undefined","has","model","drag","emit","type","removeOnSpill","dropElmModel","dropIndex","Array","children","cancel","sourceModel","targetModel","hasDragModel","dragIndex","parentNode","removeChild","JSON","parse","stringify","drop","appendChild","over","out","Injectable","args","providedIn","DroppableDirective","renderer","drakesService","EventEmitter","Object","defineProperty","nativeElement","_dropZone","ngxDroppable","defaultZone","val","ngOnInit","ngAfterViewInit","subscribe","addClass","removeClass","ngOnDestroy","Directive","selector","ElementRef","Renderer2","Input","Output","DraggableDirective","droppableDirective","_moves","handles","dragDelay","dragDelayed","_dropZones","ngxDraggable","_parentDropzones","onMove","stopPropagation","clearTimeout","touchTimeout","onDown","setTimeout","onUp","update","updateElements","querySelectorAll","from","filter","h","c","hasAttribute","findFirstDraggableParent","canMove","hasHandle","some","p","handelFor","ngDoCheck","HostListener","DragHandleDirective","ContainerComponent","_defaultZones","v","Component","template","encapsulation","ViewEncapsulation","None","ContentChild","TemplateRef","static","ViewChild","ItemComponent","draggableDirective","_copy","_removeOnSpill","_droppableItemClass","droppableItemClass","_droppableItemStyle","droppableItemStyle","classes","moveDisabled","join","isArray","data","HostBinding","components","directives","NgxDnDModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport * as dragulaNamespace from '@swimlane/dragula';\nimport { DroppableDirective } from '../directives/ngx-droppable.directive';\nimport { DraggableDirective } from '../directives/ngx-draggable.directive';\n\n// see https://github.com/dherges/ng-packagr/issues/217\nconst dragula = dragulaNamespace;\n\n/**\n * Central service that handles all events\n *\n * @export\n */\n@Injectable({ providedIn: 'root' })\nexport class DrakeStoreService {\n  private droppableMap = new WeakMap<any, DroppableDirective>();\n  private draggableMap = new WeakMap<any, DraggableDirective>();\n  private dragulaOptions: dragulaNamespace.DragulaOptions;\n  private drake: dragulaNamespace.Drake;\n\n  constructor() {\n    this.dragulaOptions = this.createDrakeOptions();\n    this.drake = dragula([], this.dragulaOptions);\n    this.registerEvents();    \n  }\n\n  register(droppable: DroppableDirective) {\n    this.droppableMap.set(droppable.container, droppable);\n    this.drake.containers.push(droppable.container);\n  }\n\n  remove(droppable: DroppableDirective) {\n    this.droppableMap.delete(droppable.container);\n    const idx = this.drake.containers.indexOf(droppable.container);\n    if (idx > -1) {\n      this.drake.containers.splice(idx, 1);\n    }\n  }\n\n  registerDraggable(draggable: DraggableDirective) {\n    this.draggableMap.set(draggable.element, draggable);\n  }\n\n  removeDraggable(draggable: DraggableDirective) {\n    this.draggableMap.delete(draggable.element);\n  }\n\n  createDrakeOptions(): dragulaNamespace.DragulaOptions {\n    const accepts = (el: any, target: any /*, source: any, sibling: any */) => {\n      if (el.contains(target)) {\n        return false;\n      }\n      const elementComponent = this.draggableMap.get(el);\n      const targetComponent = this.droppableMap.get(target);\n      if (elementComponent && targetComponent) {\n        return elementComponent.dropZones.includes(targetComponent.dropZone);\n      }\n      return true;\n    };\n\n    const copy = (_: any, source: any) => {\n      const sourceComponent = this.droppableMap.get(source);\n      if (sourceComponent) {\n        return sourceComponent.copy;\n      }\n      return false;\n    };\n\n    const moves = (el?: any, source?: any, handle?: any, sibling?: any) => {\n      const elementComponent = this.draggableMap.get(el);\n      if (elementComponent) {\n        return elementComponent.moves(source, handle, sibling);\n      }\n      return true;\n    };\n\n    const direction: any = (el: any, target: any, source: any) => {\n      const targetComponent = this.droppableMap.get(target);\n      return targetComponent.direction || 'vertical';\n    };\n\n    return { accepts, copy, moves, revertOnSpill: true, direction };\n  }\n\n  registerEvents(): void {\n    let dragElm: any;\n    let draggedItem: any;\n\n    this.drake.on('drag', (el: any, source: any) => {\n      draggedItem = undefined;\n      dragElm = el;\n\n      if (!el || !source) {\n        return;\n      }\n\n      if (this.draggableMap.has(el)) {\n        const elementComponent = this.draggableMap.get(el);\n        draggedItem = elementComponent.model;\n\n        elementComponent.drag.emit({\n          type: 'drag',\n          el,\n          source,\n          value: draggedItem\n        });\n      }\n\n      if (this.droppableMap.has(source)) {\n        const sourceComponent = this.droppableMap.get(source);\n        this.dragulaOptions.removeOnSpill = sourceComponent.removeOnSpill;\n\n        sourceComponent.drag.emit({\n          type: 'drag',\n          el,\n          source,\n          sourceComponent,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('drop', (el: any, target: any, source: any) => {\n      const targetComponent = this.droppableMap.get(target);\n\n      if (!targetComponent) {\n        // not a target, abort\n        return;\n      }\n\n      let dropElmModel = draggedItem;\n      const dropIndex = Array.prototype.indexOf.call(target.children, el);\n\n      if (dropIndex < 0) {\n        // dropIndex is bad... cancel\n        this.drake.cancel(true);\n        return;\n      }\n\n      const sourceComponent = this.droppableMap.get(source);\n\n      if (sourceComponent) {\n        const sourceModel = sourceComponent.model;\n        const targetModel = targetComponent.model;\n\n        const hasDragModel = !!(sourceModel && draggedItem);\n        const dragIndex = hasDragModel ? sourceModel.indexOf(draggedItem) : -1;\n        if (hasDragModel && dragIndex < 0) {\n          // dragIndex is bad... cancel\n          this.drake.cancel(true);\n          return;\n        }\n\n        if (targetModel) {\n          const reorder = dragIndex > -1 && sourceModel && target === source;\n          const copy = !sourceModel || dragElm !== el;\n          if (reorder) {\n            sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n          } else {\n            if (el.parentNode === target) {\n              target.removeChild(el);\n            }\n\n            if (copy) {\n              dropElmModel = JSON.parse(JSON.stringify(dropElmModel));\n            } else {\n              if (el.parentNode !== source) {\n                // add element back, let angular remove it\n                this.drake.cancel(true);\n              }\n              sourceModel.splice(dragIndex, 1);\n            }\n            targetModel.splice(dropIndex, 0, dropElmModel);\n          }\n        }\n      }\n\n      targetComponent.drop.emit({\n        type: 'drop',\n        el,\n        source,\n        value: dropElmModel,\n        dropIndex\n      });\n    });\n\n    this.drake.on('remove', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(source)) {\n        const sourceComponent = this.droppableMap.get(source);\n        const sourceModel = sourceComponent.model;\n\n        const dragIndex = draggedItem && sourceModel ? sourceModel.indexOf(draggedItem) : -1;\n\n        if (dragIndex > -1) {\n          if (el.parentNode !== source) {\n            // add element back, let angular remove it\n            source.appendChild(el);\n          }\n          sourceModel.splice(dragIndex, 1);\n        }\n\n        sourceComponent.remove.emit({\n          type: 'remove',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('cancel', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.cancel.emit({\n          type: 'cancel',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('over', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.over.emit({\n          type: 'over',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('out', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.out.emit({\n          type: 'out',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n  ElementRef,\n  EventEmitter,\n  Renderer2\n} from '@angular/core';\n\nimport { DrakeStoreService } from '../services/drake-store.service';\n\nlet i = 10000;\nfunction getNextId() {\n  return i++;\n}\n\n/**\n * Makes the container droppable and children draggable.\n *\n * @export\n */\n@Directive({ selector: '[ngxDroppable]' })\nexport class DroppableDirective implements OnInit, OnDestroy, AfterViewInit {\n  @Input() model: any;\n  @Input() copy = false;\n  @Input() removeOnSpill = false;\n  @Input() ngxDroppable: string;\n  @Input() direction: 'vertical' | 'horizontal' | 'mixed' = 'vertical';\n\n  @Output() drop: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() over: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() out: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() cancel: EventEmitter<any> = new EventEmitter<any>();\n\n  get container(): any {\n    return this.el.nativeElement;\n  }\n\n  @Input()\n  get dropZone(): string {\n    return this._dropZone || this.ngxDroppable || this.defaultZone;\n  }\n  set dropZone(val: string) {\n    this._dropZone = val;\n  }\n\n  defaultZone: string;\n  _dropZone: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private drakesService: DrakeStoreService) {}\n\n  ngOnInit(): void {\n    this.defaultZone = `@@DefaultDropZone-${getNextId()}@@`;\n    this.drakesService.register(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.over.subscribe(() => {\n      this.renderer.addClass(this.container, 'gu-over');\n    });\n    this.out.subscribe(() => {\n      this.renderer.removeClass(this.container, 'gu-over');\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.drakesService.remove(this);\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, Output, EventEmitter, OnDestroy, OnInit } from '@angular/core';\n\nimport { DroppableDirective } from './ngx-droppable.directive';\nimport { DrakeStoreService } from '../services/drake-store.service';\n\n/**\n * Adds properties and events to draggable elements\n *\n * @export\n */\n@Directive({ selector: '[ngxDraggable]' })\nexport class DraggableDirective implements OnInit, OnDestroy {\n  @Input() ngxDraggable: string[];\n  @Input() model: any;\n\n  @Input()\n  get dropZones(): any {\n    return this._dropZones || this.ngxDraggable || this._parentDropzones;\n  }\n  set dropZones(val: any) {\n    this._dropZones = val;\n  }\n\n  @Input('moves') _moves: boolean | ((...args: any[]) => any) = true;\n\n  /*\n  ContentChildren doesn't get children created with NgTemplateOutlet\n  See https://github.com/angular/angular/issues/14842\n  Implemented via updateElements method\n\n  @ContentChildren(DragHandleDirective, {descendants: true})\n  handlesList: QueryList<DragHandleDirective>; */\n\n  handles: any[] = [];\n\n  get hasHandle() {\n    return !!this.handles.length;\n  }\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  dragDelay: number = 200; // milliseconds\n  dragDelayed: boolean = true;\n\n  touchTimeout: any;\n\n  get element(): any {\n    return this.el.nativeElement;\n  }\n\n  _dropZones: string[];\n  _parentDropzones: string[];\n\n  constructor(\n    private el: ElementRef,\n    private drakesService: DrakeStoreService,\n    private droppableDirective: DroppableDirective\n  ) {}\n\n  // From: https://github.com/bevacqua/dragula/issues/289#issuecomment-277143172\n  @HostListener('touchmove', ['$event'])\n  onMove(e: Event) {\n    if (!this._moves || this.dragDelayed) {\n      e.stopPropagation();\n      clearTimeout(this.touchTimeout);\n    }\n  }\n\n  @HostListener('touchstart')\n  onDown() {\n    if (this._moves) {\n      this.touchTimeout = setTimeout(() => {\n        this.dragDelayed = false;\n      }, this.dragDelay);\n    }\n  }\n\n  @HostListener('touchend')\n  onUp() {\n    if (this._moves) {\n      clearTimeout(<number>this.touchTimeout);\n      this.dragDelayed = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this._parentDropzones = [this.droppableDirective.dropZone];\n    this.drakesService.registerDraggable(this);\n    this.updateElements();\n  }\n\n  ngOnDestroy(): void {\n    this.drakesService.removeDraggable(this);\n  }\n\n  updateElements(): void {\n    const nativeElement = this.el.nativeElement;\n    const handles: NodeList = nativeElement.querySelectorAll('[ngxdraghandle]');\n    this.handles = Array.from(handles).filter((h: any) => findFirstDraggableParent(h) === nativeElement);\n\n    function findFirstDraggableParent(c: any) {\n      while (c.parentNode) {\n        c = c.parentNode;\n        if (c.hasAttribute && c.hasAttribute('ngxdraggable')) {\n          return c;\n        }\n      }\n    }\n  }\n\n  canMove(source?: any, handle?: any, sibling?: any): boolean {\n    if (typeof this._moves === 'boolean') return this._moves;\n    if (typeof this._moves === 'function') return this._moves(this.model, source, handle, sibling);\n    return true;\n  }\n\n  moves(source: any, handle: any, sibling: any): boolean {\n    if (!this.canMove(source, handle, sibling)) return false;\n\n    return this.hasHandle ? this.handles.some(h => handelFor(handle, h)) : true;\n\n    function handelFor(c: any, p: any) {\n      if (c === p) return true;\n      while ((c = c.parentNode) && c !== p); // tslint:disable-line\n      return !!c;\n    }\n  }\n\n  ngDoCheck(): void {\n    this.updateElements();\n  }\n}\n","import { Directive } from '@angular/core';\n\n/**\n * Adds properties and events to drag handle elements\n *\n * @export\n */\n@Directive({ selector: '[ngxDragHandle]' })\nexport class DragHandleDirective {}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ContentChild,\n  TemplateRef,\n  ViewChild,\n  EventEmitter\n} from '@angular/core';\n\nimport { DroppableDirective } from '../../directives/ngx-droppable.directive';\n\nlet i = 0;\nfunction getNextId() {\n  return i++;\n}\n\n/**\n * Component that allows nested ngxDroppable and ngxDraggables\n *\n * @export\n */\n@Component({\n  selector: 'ngx-dnd-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ContainerComponent implements OnInit, AfterViewInit {\n  @Input() model: any;\n  @Input() copy = false;\n  @Input() removeOnSpill = false;\n  @Input() droppableItemClass: string | ((o: any) => any);\n  @Input() droppableItemStyle: string | ((o: any) => any);\n\n\n  @Input() dropZone = `@@DefaultDropZone-${getNextId()}@@`;\n\n  @Input()\n  get dropZones() {\n    return this._dropZones || this._defaultZones;\n  }\n  set dropZones(val) {\n    this._dropZones = val;\n  }\n\n  @Input() moves: (model: any, source: any, handle: any, sibling: any) => boolean;\n\n  // @Input() classes: any = {};\n  // @Input() dragulaOptions: any;\n\n  @Input()\n  @ContentChild(TemplateRef, { static: true })\n  template: TemplateRef<any>;\n\n  @Input()\n  @ViewChild(DroppableDirective, { static: true })\n  droppable: any;\n\n  @Output() drop: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() over: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() out: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() cancel: EventEmitter<any> = new EventEmitter<any>();\n\n  _dropZones: string[];\n  _defaultZones: string[];\n\n  ngOnInit() {\n    this._defaultZones = [this.dropZone];\n  }\n\n  ngAfterViewInit() {\n    this.droppable.drag.subscribe((v: any) => this.drag.emit(v));\n    this.droppable.drop.subscribe((v: any) => this.drop.emit(v));\n    this.droppable.over.subscribe((v: any) => this.over.emit(v));\n    this.droppable.out.subscribe((v: any) => this.out.emit(v));\n    this.droppable.remove.subscribe((v: any) => this.remove.emit(v));\n    this.droppable.cancel.subscribe((v: any) => this.cancel.emit(v));\n  }\n}\n","import { Component, OnInit, Input, ViewEncapsulation, HostBinding } from '@angular/core';\n\nimport { ContainerComponent } from '../container/container.component';\nimport { DraggableDirective } from '../../directives/ngx-draggable.directive';\n\n/**\n * Component that allows nested ngxDroppable and ngxDraggables\n * Should only be use inside a ngx-dnd-container\n * Outside a ngx-dnd-container use ngxDroppable\n *\n * @export\n */\n@Component({\n  selector: 'ngx-dnd-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ItemComponent implements OnInit {\n  @Input() model: any;\n\n  @Input()\n  get dropZone() {\n    return this._dropZone || this.container.dropZone;\n  }\n  set dropZone(val) {\n    this._dropZone = val;\n  }\n\n  @Input()\n  get dropZones() {\n    return this._dropZones || this.container.dropZones;\n  }\n  set dropZones(val) {\n    this._dropZones = val;\n  }\n\n  @Input()\n  get droppableItemClass() {\n    return this._droppableItemClass || this.container.droppableItemClass;\n  }\n  set droppableItemClass(val) {\n    this._droppableItemClass = val;\n  }\n\n  @Input()\n  get removeOnSpill() {\n    return typeof this._removeOnSpill === 'boolean' ? this._removeOnSpill : this.container.removeOnSpill;\n  }\n  set removeOnSpill(val) {\n    this._removeOnSpill = val;\n  }\n\n  @Input()\n  get copy() {\n    return typeof this._copy === 'boolean' ? this._copy : this.container.copy;\n  }\n  set copy(val) {\n    this._copy = val;\n  }\n\n  _copy = false;\n  _dropZone: any;\n  _dropZones: any;\n  _droppableItemClass: any;\n  _droppableItemStyle: any;\n  _removeOnSpill = false;\n  data: any;\n\n  get hasHandle(): boolean {\n    return this.draggableDirective.hasHandle;\n  }\n\n  get moveDisabled(): boolean {\n    return !this.draggableDirective.canMove();\n  }\n  @HostBinding('style')\n  @Input()\n  get droppableItemStyle() {\n    return this._droppableItemStyle || this.container.droppableItemStyle;\n  }\n  set droppableItemStyle(val) {\n    this._droppableItemStyle = val;\n  }\n\n  @HostBinding('class')\n  get classString() {\n    const itemClass =\n      typeof this.droppableItemClass === 'function' ? this.droppableItemClass(this.model) : this.droppableItemClass;\n\n    const classes = ['ngx-dnd-item', itemClass || ''];\n    if (this.moveDisabled) {\n      classes.push('move-disabled');\n    }\n    if (this.hasHandle) {\n      classes.push('has-handle');\n    }\n    return classes.join(' ');\n  }\n\n  get type() {\n    if (Array.isArray(this.model)) {\n      return 'array';\n    }\n    return typeof this.model;\n  }\n\n  constructor(public container: ContainerComponent, public draggableDirective: DraggableDirective) {}\n\n  ngOnInit() {\n    this.data = {\n      model: this.model,\n      type: this.type,\n      dropZone: this.dropZone,\n      template: this.container.template\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DraggableDirective } from './directives/ngx-draggable.directive';\nimport { DroppableDirective } from './directives/ngx-droppable.directive';\nimport { DragHandleDirective } from './directives/ngx-drag-handle.directive';\nimport { ContainerComponent } from './components/container/container.component';\nimport { ItemComponent } from './components/item/item.component';\nimport { DrakeStoreService } from './services/drake-store.service';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\n\nconst components = [ContainerComponent, ItemComponent];\nconst directives = [DraggableDirective, DroppableDirective, DragHandleDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives]\n})\nexport class NgxDnDModule {\n  static forRoot(): ModuleWithProviders {\n  return {\n    ngModule: NgxDnDModule,\n    providers: [ DrakeStoreService ]\n  };\n}}\n"]}